-- Core tables for Meals Planner MVP (PostgreSQL/Supabase)
-- UUIDs assumed generated by database (gen_random_uuid()) when inserting via RLS policies

create table if not exists profiles (
    id uuid primary key default gen_random_uuid(),
    auth_user_id uuid not null,
    display_name text not null,
    locale text,
    time_zone text,
    location jsonb not null,              -- Address
    household jsonb not null,             -- { people: Person[], pets: Pet[] }
    dietary_restrictions jsonb not null,  -- string[]
    favorite_foods jsonb,
    disliked_foods jsonb,
    goals jsonb not null,                 -- string[]
    raw_onboarding jsonb,
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now()
);

create index if not exists idx_profiles_auth_user on profiles(auth_user_id);

create table if not exists weekly_meals (
    id uuid primary key default gen_random_uuid(),
    user_id uuid not null references profiles(id) on delete cascade,
    week_start_date date not null,
    meals jsonb not null,                 -- Meal[]
    summary text,
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now(),
    unique (user_id, week_start_date)
);

create table if not exists shopping_lists (
    id uuid primary key default gen_random_uuid(),
    user_id uuid not null references profiles(id) on delete cascade,
    week_meals_id uuid references weekly_meals(id) on delete set null,
    items jsonb not null,                 -- ShoppingListItem[]
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now()
);

create table if not exists pantry_items (
    id uuid primary key default gen_random_uuid(),
    user_id uuid not null references profiles(id) on delete cascade,
    name text not null,
    quantity numeric not null,
    unit text not null,
    expires_on date,
    notes text,
    created_at timestamptz not null default now()
);

create table if not exists pantry_snapshots (
    id uuid primary key default gen_random_uuid(),
    user_id uuid not null references profiles(id) on delete cascade,
    captured_at timestamptz not null default now(),
    items jsonb not null                  -- PantryItem[] snapshot
);

-- Basic triggers to auto-update updated_at
create or replace function set_updated_at()
returns trigger as $$
begin
  new.updated_at = now();
  return new;
end;
$$ language plpgsql;

create trigger set_profiles_updated_at before update on profiles
for each row execute function set_updated_at();

create trigger set_weekly_meals_updated_at before update on weekly_meals
for each row execute function set_updated_at();

create trigger set_shopping_lists_updated_at before update on shopping_lists
for each row execute function set_updated_at();
